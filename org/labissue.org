#+TITLE: Practice: Adding details to plots
#+SUBTITLE: A quick introduction to base R graphics
#+AUTHOR: 
#+OVERVIEW: overview hideblocks indent inlineimages
#+PROPERTY: header-args:R :exports both :results output :session *R*
* README

- Practice for ~plot~ customization as discussed in the lecture
- Submit Org-file on Canvas when you're done

* DONE Identify yourself

- Add your name and ~(pledged)~ at the top
  
* DONE Getting the data

1) Install the =NHANES= package, load it and look at the structure of
   the =NHANES= data frame.
   #+begin_src R
library(NHANES)
str(NHANES)
   #+end_src

   #+RESULTS:
   #+begin_example
   Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	10000 obs. of  76 variables:
    $ ID              : int  51624 51624 51624 51625 51630 51638 51646 51647 51647 51647 ...
    $ SurveyYr        : Factor w/ 2 levels "2009_10","2011_12": 1 1 1 1 1 1 1 1 1 1 ...
    $ Gender          : Factor w/ 2 levels "female","male": 2 2 2 2 1 2 2 1 1 1 ...
    $ Age             : int  34 34 34 4 49 9 8 45 45 45 ...
    $ AgeDecade       : Factor w/ 8 levels " 0-9"," 10-19",..: 4 4 4 1 5 1 1 5 5 5 ...
    $ AgeMonths       : int  409 409 409 49 596 115 101 541 541 541 ...
    $ Race1           : Factor w/ 5 levels "Black","Hispanic",..: 4 4 4 5 4 4 4 4 4 4 ...
    $ Race3           : Factor w/ 6 levels "Asian","Black",..: NA NA NA NA NA NA NA NA NA NA ...
    $ Education       : Factor w/ 5 levels "8th Grade","9 - 11th Grade",..: 3 3 3 NA 4 NA NA 5 5 5 ...
    $ MaritalStatus   : Factor w/ 6 levels "Divorced","LivePartner",..: 3 3 3 NA 2 NA NA 3 3 3 ...
    $ HHIncome        : Factor w/ 12 levels " 0-4999"," 5000-9999",..: 6 6 6 5 7 11 9 11 11 11 ...
    $ HHIncomeMid     : int  30000 30000 30000 22500 40000 87500 60000 87500 87500 87500 ...
    $ Poverty         : num  1.36 1.36 1.36 1.07 1.91 1.84 2.33 5 5 5 ...
    $ HomeRooms       : int  6 6 6 9 5 6 7 6 6 6 ...
    $ HomeOwn         : Factor w/ 3 levels "Own","Rent","Other": 1 1 1 1 2 2 1 1 1 1 ...
    $ Work            : Factor w/ 3 levels "Looking","NotWorking",..: 2 2 2 NA 2 NA NA 3 3 3 ...
    $ Weight          : num  87.4 87.4 87.4 17 86.7 29.8 35.2 75.7 75.7 75.7 ...
    $ Length          : num  NA NA NA NA NA NA NA NA NA NA ...
    $ HeadCirc        : num  NA NA NA NA NA NA NA NA NA NA ...
    $ Height          : num  165 165 165 105 168 ...
    $ BMI             : num  32.2 32.2 32.2 15.3 30.6 ...
    $ BMICatUnder20yrs: Factor w/ 4 levels "UnderWeight",..: NA NA NA NA NA NA NA NA NA NA ...
    $ BMI_WHO         : Factor w/ 4 levels "12.0_18.5","18.5_to_24.9",..: 4 4 4 1 4 1 2 3 3 3 ...
    $ Pulse           : int  70 70 70 NA 86 82 72 62 62 62 ...
    $ BPSysAve        : int  113 113 113 NA 112 86 107 118 118 118 ...
    $ BPDiaAve        : int  85 85 85 NA 75 47 37 64 64 64 ...
    $ BPSys1          : int  114 114 114 NA 118 84 114 106 106 106 ...
    $ BPDia1          : int  88 88 88 NA 82 50 46 62 62 62 ...
    $ BPSys2          : int  114 114 114 NA 108 84 108 118 118 118 ...
    $ BPDia2          : int  88 88 88 NA 74 50 36 68 68 68 ...
    $ BPSys3          : int  112 112 112 NA 116 88 106 118 118 118 ...
    $ BPDia3          : int  82 82 82 NA 76 44 38 60 60 60 ...
    $ Testosterone    : num  NA NA NA NA NA NA NA NA NA NA ...
    $ DirectChol      : num  1.29 1.29 1.29 NA 1.16 1.34 1.55 2.12 2.12 2.12 ...
    $ TotChol         : num  3.49 3.49 3.49 NA 6.7 4.86 4.09 5.82 5.82 5.82 ...
    $ UrineVol1       : int  352 352 352 NA 77 123 238 106 106 106 ...
    $ UrineFlow1      : num  NA NA NA NA 0.094 ...
    $ UrineVol2       : int  NA NA NA NA NA NA NA NA NA NA ...
    $ UrineFlow2      : num  NA NA NA NA NA NA NA NA NA NA ...
    $ Diabetes        : Factor w/ 2 levels "No","Yes": 1 1 1 1 1 1 1 1 1 1 ...
    $ DiabetesAge     : int  NA NA NA NA NA NA NA NA NA NA ...
    $ HealthGen       : Factor w/ 5 levels "Excellent","Vgood",..: 3 3 3 NA 3 NA NA 2 2 2 ...
    $ DaysPhysHlthBad : int  0 0 0 NA 0 NA NA 0 0 0 ...
    $ DaysMentHlthBad : int  15 15 15 NA 10 NA NA 3 3 3 ...
    $ LittleInterest  : Factor w/ 3 levels "None","Several",..: 3 3 3 NA 2 NA NA 1 1 1 ...
    $ Depressed       : Factor w/ 3 levels "None","Several",..: 2 2 2 NA 2 NA NA 1 1 1 ...
    $ nPregnancies    : int  NA NA NA NA 2 NA NA 1 1 1 ...
    $ nBabies         : int  NA NA NA NA 2 NA NA NA NA NA ...
    $ Age1stBaby      : int  NA NA NA NA 27 NA NA NA NA NA ...
    $ SleepHrsNight   : int  4 4 4 NA 8 NA NA 8 8 8 ...
    $ SleepTrouble    : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 1 1 1 ...
    $ PhysActive      : Factor w/ 2 levels "No","Yes": 1 1 1 NA 1 NA NA 2 2 2 ...
    $ PhysActiveDays  : int  NA NA NA NA NA NA NA 5 5 5 ...
    $ TVHrsDay        : Factor w/ 7 levels "0_hrs","0_to_1_hr",..: NA NA NA NA NA NA NA NA NA NA ...
    $ CompHrsDay      : Factor w/ 7 levels "0_hrs","0_to_1_hr",..: NA NA NA NA NA NA NA NA NA NA ...
    $ TVHrsDayChild   : int  NA NA NA 4 NA 5 1 NA NA NA ...
    $ CompHrsDayChild : int  NA NA NA 1 NA 0 6 NA NA NA ...
    $ Alcohol12PlusYr : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 2 2 2 ...
    $ AlcoholDay      : int  NA NA NA NA 2 NA NA 3 3 3 ...
    $ AlcoholYear     : int  0 0 0 NA 20 NA NA 52 52 52 ...
    $ SmokeNow        : Factor w/ 2 levels "No","Yes": 1 1 1 NA 2 NA NA NA NA NA ...
    $ Smoke100        : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 1 1 1 ...
    $ Smoke100n       : Factor w/ 2 levels "Non-Smoker","Smoker": 2 2 2 NA 2 NA NA 1 1 1 ...
    $ SmokeAge        : int  18 18 18 NA 38 NA NA NA NA NA ...
    $ Marijuana       : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 2 2 2 ...
    $ AgeFirstMarij   : int  17 17 17 NA 18 NA NA 13 13 13 ...
    $ RegularMarij    : Factor w/ 2 levels "No","Yes": 1 1 1 NA 1 NA NA 1 1 1 ...
    $ AgeRegMarij     : int  NA NA NA NA NA NA NA NA NA NA ...
    $ HardDrugs       : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 1 1 1 ...
    $ SexEver         : Factor w/ 2 levels "No","Yes": 2 2 2 NA 2 NA NA 2 2 2 ...
    $ SexAge          : int  16 16 16 NA 12 NA NA 13 13 13 ...
    $ SexNumPartnLife : int  8 8 8 NA 10 NA NA 20 20 20 ...
    $ SexNumPartYear  : int  1 1 1 NA 1 NA NA 0 0 0 ...
    $ SameSex         : Factor w/ 2 levels "No","Yes": 1 1 1 NA 2 NA NA 2 2 2 ...
    $ SexOrientation  : Factor w/ 3 levels "Bisexual","Heterosexual",..: 2 2 2 NA 2 NA NA 1 1 1 ...
    $ PregnantNow     : Factor w/ 3 levels "Yes","No","Unknown": NA NA NA NA NA NA NA NA NA NA ...
   #+end_example

2) On the R console, open the =help= for =NHANES= to find out more about
   these data.

* DONE Plotting the data

1) Save the ~Weight~ vector as ~x~ and the ~Height~ vector as ~y~ for later.

   #+begin_src R  :results output
y <- NHANES$Weight
x <- NHANES$Height
   #+end_src

   #+RESULTS:

2) Find out how many missing values these vectors each have. Tip: you
   can use the =is.na= function to identify missing values. The expected
   answers: 78 missing values for x (weight) and 353 for y (height).
   #+begin_src R
 sum(is.na(x))
 sum(is.na(y))
   #+end_src

   #+RESULTS:
   : [1] 353
   : [1] 78

3) Create a scatterplot of the weight on the ~x~ axis and the height on
   the ~y~ axis. Save the plot as ~scatter.png~. Since there are so many
   values, reduce the point character size, and change the point
   character symbol until you can see individual points better.

   #+begin_src R :results graphics file :file scatter.png
plot(x, y)
   #+end_src

   #+RESULTS:
   [[file:scatter.png]]

4) You can try something else: Instead of =plot=, try =smoothScatter=.

   #+begin_src R :file smoothScatter.png :session *R* :results file graphics output :exports both
smoothScatter(x, y)
   #+end_src

   #+RESULTS:
   [[file:smoothScatter.png]]

* TODO Customize the plot

1) Customize the plot by using different point characters to identify
   all people, who weigh more than 200 kg (approx. 440 lbs) resulting
   plot as ~w200.png~.

   - Define an appropriate ~index~ vector using the ~which~ function.
   - Call ~plot~ as before but don't draw any points.
   - Call ~points[index]~ for outliers ,and ~points[-index]~ for others.
   - Inside the ~points~ function calls, use =pch=16= and =cex=2= for the
     outliers, and make them blue.
   - Use =pch=1=, =cex=0.2= for the other points, and color them
     lightblue.


   #+begin_src R :results graphics file :file lab.png
which(y > 200)
plot(x,y, type="n")
points(x[index], y[index], pch=16, cex=2, col='blue')
points(x[-index], y[-index], pch=1, cex=.2, col='lightblue')

   #+end_src

   #+RESULTS:
   [[file:plot.png]]

2) Redo the plot, label the axes and give the plot a suitable
   title. Save your final plot in ~final.png~.

   #+name: finalPlot
   #+begin_src R :results graphics file :file final.png

   #+end_src

* TODO Add a trendline

In the last plot, we indexed all male participants taller than or
equal than 180 cm (about 6'). Now we want to 1) add a trendline, 2)
add a suitable legend.

1) To add a trendline, define a model using the ~lm~ function on the two
   coordinate vectors ~y~ and ~x~, and store it in ~trend~

   #+begin_src R

   #+end_src

2) Use the model's intercept and slope values to draw a blue, dashed,
   thick trend line. Store the resulting graph in ~trend.png~.

   You need to recreated the calls to ~plot~ and ~points~ for this
   graph. Draw this graph first, then add the trendline. The final
   plot is already added here.

   #+name: trendPlot
   #+begin_src R :results graphics file :file trend.png :noweb yes
     <<finalPlot>>

   #+end_src

* TODO Add text for outliers

Add the text "Outlier" to the outlying points of the plot. You can use
the following label: ~paste("Outlier -->")~. Left-align the text and
make sure that the text does not obscure the data.

The code block below uses the previous code block and stores the plot
 in =trend.png=.

#+name: textPlot
#+begin_src R :results graphics file :file text.png :noweb yes
  <<trendPlot>>
  
#+end_src

* TODO Add a legend

Add a legend for the trendline and for the two plot point types. Store
the plot in the file ~legend.png~.

Tip: specify vectors for ~pch~, ~lty~ and ~lwd~ and specify irrelevant
values (e.g. point size for the trendline, or line type for the
points) as ~NA~. Move the legend to a place where it can be read easily,
and make it a little larger.

#+begin_src R :results graphics file :file legend.png :noweb yes
  <<textPlot>>

#+end_src

* Expected final result

[[https://github.com/birkenkrahe/dviz/blob/main/img/NHANES.png][The final result should look like this.]]
